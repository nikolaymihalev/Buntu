@model PostInfoModel
@inject ILikeService likeService 
@inject IFavoritePostService favoritePostService
@inject ICommentService commentService
@inject UserManager<ApplicationUser> userManager;

<div class="post-container">
    <div class="user-info">
        <img class="user-profile-img" src="data:image/png;base64,@Model.UserProfileImage" alt="Image">
        <h5 class="user-username">@Model.Username</h5>
    </div>
    <div class="post-details">
        <h2 class="text-start">@Model.Content</h2>
    </div>
    <img src="data:image/png;base64,@Model.Image" alt="Image" style="width: 550px; height: 400px;">
    <div class="post-buttons">
        <div class="post-buttons-link">
            <div class="like-container">
                @{
                    string imageValue = "";
                    if (await likeService.IsPostLikedByUserAsync(Model.Id, User.Id()) == false)
                    {
                        imageValue = "blackbuttons/heart.png";
                    }
                    else
                    {
                        var like = await likeService.GetLikeByIdAsync(Model.Id, User.Id());
                        imageValue = "likes/"+like.Variant+".png";
                       
                    }
                    <button class="like-btn" data-post-id="@Model.Id">
                        <img class="like-image-@Model.Id" src="~/images/@imageValue" />
                    </button>
                    <div class="reaction-form">
                        <button class="reaction-btn" data-variant="Thumb" data-post-id="@Model.Id">
                            <img src="~/images/likes/Thumb.png" />
                        </button>
                        <button class="reaction-btn" data-variant="Love" data-post-id="@Model.Id">
                            <img src="~/images/likes/Love.png" />
                        </button>
                        <button class="reaction-btn" data-variant="Haha" data-post-id="@Model.Id">
                            <img src="~/images/likes/Haha.png" />
                        </button>
                        <button class="reaction-btn" data-variant="Wow" data-post-id="@Model.Id">
                            <img src="~/images/likes/Wow.png" />
                        </button>
                        <button class="reaction-btn" data-variant="Sad" data-post-id="@Model.Id">
                            <img src="~/images/likes/Sad.png" />
                        </button>
                        <button class="reaction-btn" data-variant="Angry" data-post-id="@Model.Id">
                            <img src="~/images/likes/Angry.png" />
                        </button>
                    </div>
                }                
            </div>
        </div>     
        
        <div class="post-buttons-link">
            <button class="all-comments-btn" data-post-id="@Model.Id">
                <img src="~/images/BlackButtons/comment.png" />
            </button>
            <div class="all-comments-form-@Model.Id" style="display: none;
                                                    position: fixed;
                                                    justify-content: center;
                                                    align-items: center;
                                                    left: 0%;
                                                    top: 10%;
                                                    width: 100%;
                                                    height: 80%;
                                                    overflow: auto;
                                                    background-color: white;
                                                    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">
                <h3 style="margin-top:20px">Comments</h3>
                @{
                    var postComments = await commentService.GetCommentsForPostAsync(Model.Id);

                    foreach (var comment in postComments)
                    {
                        <div class="comments-content">
                            @{
                                var commentUser = await userManager.FindByIdAsync(comment.UserId);
                                var commentUserProfileImage = Convert.ToBase64String(commentUser.ProfileImage);

                                <div class="user-info">
                                    <img class="user-profile-img" src="data:image/png;base64,@commentUserProfileImage" alt="Image">
                                    <h5 class="user-username">@commentUser.UserName</h5>
                                    <h5 class="user-username">: @comment.Content</h5>
                                </div>                                           
                                
                            }
                        </div>
                    }                    
                }
                <button class="all-comments-btn" data-post-id="@Model.Id">
                    <h3>X</h3>
                </button>
            </div>
        </div>

        <div class="post-buttons-link">
            <button class="favorite-btn" data-post-id="@Model.Id">
                @{
                    string favoriteButtonImg = "";
                    if (await favoritePostService.IsFavoritePostExistsAsync(Model.Id, User.Id()) == true)
                    {
                        favoriteButtonImg = "favorite_pressed.png";
                    }
                    else
                    {
                        favoriteButtonImg = "favorite.png";
                    }
                    <img class="favorite-img-@Model.Id" src="~/images/BlackButtons/@favoriteButtonImg" />
                }
            </button>
        </div>
    </div>
    <div class="post-details">
        <div class ="text-start">
            <button class="all-likes-btn" data-post-id="@Model.Id">
                <h5 class="post-likescount-@Model.Id">@Model.LikesCount likes</h5>
            </button>
        </div>
        @if (Model.LastCommentUsername != null && Model.LastCommentContent != null)
        {
            <div class="last-comment">
                <p class="last-comment-username-@Model.Id" style="color:black; font-weight: bold">@Model.LastCommentUsername</p>
                <p class="last-comment-content-@Model.Id" style="color:black;">: @Model.LastCommentContent</p>
            </div>
            <br />
        }
        <div class="post-comment" >
            <textarea rows="1" class="form-control" id="comment-text-@Model.Id" placeholder="Add a comment..." style="border:none" oninput="toggleCommentVisibility(this)"></textarea>
            <button class="comment-button" data-post-id="@Model.Id" data-username="@User.Identity?.Name">
                POST
            </button>
        </div>
        
    </div>
</div>